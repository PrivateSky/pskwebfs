require("../../../builds/devel/pskruntime.js");
const assert = require("double-check").assert;
var fs = require('fs');

const invalidPath = 'some-fake-file.txt';
const validPath = 'mynewfile.txt';

function testFileNotExist(path) {

    fs.stat(path, function (error, stats) {
        assert.true(error !== null, 'TEST FAILED: File not exists ');
    });
}

function testOpenFileNotExists(path) {
    fs.open(path, "rs+", function (error, fd) {

        assert.true(error !== null, 'TEST FAILED: open ');
    });
}

function testOpenPermission(path, permission) {
    fs.open(path, permission, function (error, fd) {
        assert.true(fd !== undefined, 'TEST FAILED: open with permission ');
    });
}

function testOpen(path) {

    fs.open(path, "a+", function (error, fd) {
        assert.true(error === null, 'TEST FAILED: open ');
        assert.true(fd !== undefined, 'TEST FAILED: open ');
        fs.close(fd, function (error) {
            assert.true(error === null, 'TEST FAILED: close')
        });
    });
}

testFileNotExist(invalidPath);
testOpenFileNotExists(invalidPath);
testOpen(validPath);
testOpenPermission(validPath, 'a');